warning: variable `total_bytes` is assigned to, but never used
   --> src/concurrency/async_blob_store.rs:188:17
    |
188 |         let mut total_bytes = 0;
    |                 ^^^^^^^^^^^
    |
    = note: consider using `_total_bytes` instead
    = note: `#[warn(unused_variables)]` on by default

warning: variable `total_bytes` is assigned to, but never used
   --> src/concurrency/async_blob_store.rs:211:17
    |
211 |         let mut total_bytes = 0;
    |                 ^^^^^^^^^^^
    |
    = note: consider using `_total_bytes` instead

warning: variable `misses` is assigned to, but never used
   --> src/concurrency/async_blob_store.rs:212:17
    |
212 |         let mut misses = 0;
    |                 ^^^^^^
    |
    = note: consider using `_misses` instead

warning: value assigned to `misses` is never read
   --> src/concurrency/async_blob_store.rs:223:25
    |
223 |                         misses += 1;
    |                         ^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

warning: type `HuffmanNode` is more private than the item `HuffmanTree::root`
   --> src/entropy/huffman.rs:165:5
    |
165 |     pub fn root(&self) -> Option<&HuffmanNode> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method `HuffmanTree::root` is reachable at visibility `pub`
    |
note: but type `HuffmanNode` is only usable at visibility `pub(self)`
   --> src/entropy/huffman.rs:12:1
    |
12  | enum HuffmanNode {
    | ^^^^^^^^^^^^^^^^
    = note: `#[warn(private_interfaces)]` on by default

warning: method `decompress_data` is never used
   --> src/blob_store/entropy.rs:143:8
    |
86  | impl<S: BlobStore> HuffmanBlobStore<S> {
    | -------------------------------------- method in this implementation
...
143 |     fn decompress_data(&mut self, compressed: &[u8], original_length: usize) -> Result<Vec<u8>> {
    |        ^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: methods `has_children` and `remove_child` are never used
  --> src/fsa/patricia_trie.rs:68:8
   |
35 | impl PatriciaNode {
   | ----------------- methods in this implementation
...
68 |     fn has_children(&self) -> bool {
   |        ^^^^^^^^^^^^
...
83 |     fn remove_child(&mut self, first_byte: u8) -> Option<usize> {
   |        ^^^^^^^^^^^^

warning: method `calculate_max_depth` is never used
   --> src/fsa/patricia_trie.rs:328:8
    |
124 | impl PatriciaTrie {
    | ----------------- method in this implementation
...
328 |     fn calculate_max_depth(&self, node_idx: usize) -> usize {
    |        ^^^^^^^^^^^^^^^^^^^

warning: field `cumulative` is never read
   --> src/entropy/rans.rs:170:5
    |
168 | pub struct RansDecoder {
    |            ----------- field in this struct
169 |     symbols: [RansSymbol; 256],
170 |     cumulative: [u32; 257],
    |     ^^^^^^^^^^
    |
    = note: `RansDecoder` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `capacity` is never read
   --> src/memory/pool.rs:390:5
    |
387 | pub struct PooledBuffer {
    |            ------------ field in this struct
...
390 |     capacity: usize,
    |     ^^^^^^^^

warning: field `allocator` is never read
   --> src/memory/bump.rs:265:5
    |
261 | pub struct BumpVec<'a, T> {
    |            ------- field in this struct
...
265 |     allocator: &'a BumpAllocator,
    |     ^^^^^^^^^

warning: fields `size` and `page_size` are never read
  --> src/memory/hugepage.rs:46:5
   |
44 | struct HugePageAllocation {
   |        ------------------ fields in this struct
45 |     ptr: *mut u8,
46 |     size: usize,
   |     ^^^^
47 |     page_size: usize,
   |     ^^^^^^^^^

warning: fields `file_path` and `created_at` are never read
   --> src/concurrency/async_blob_store.rs:252:5
    |
250 | struct FileMetadata {
    |        ------------ fields in this struct
251 |     size: usize,
252 |     file_path: PathBuf,
    |     ^^^^^^^^^
253 |     created_at: Instant,
    |     ^^^^^^^^^^
    |
    = note: `FileMetadata` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `queue` is never read
   --> src/concurrency/work_stealing.rs:244:5
    |
241 | struct WorkerThread {
    |        ------------ field in this struct
...
244 |     queue: Arc<WorkStealingQueue>,
    |     ^^^^^

warning: fields `timestamp` and `data_hash` are never read
  --> src/compression/adaptive.rs:70:5
   |
65 | struct PerformanceMeasurement {
   |        ---------------------- fields in this struct
...
70 |     timestamp: Instant,
   |     ^^^^^^^^^
71 |     data_hash: u64, // Simple hash to identify data patterns
   |     ^^^^^^^^^
   |
   = note: `PerformanceMeasurement` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: method `switch_algorithm` is never used
   --> src/compression/adaptive.rs:359:8
    |
110 | impl AdaptiveCompressor {
    | ----------------------- method in this implementation
...
359 |     fn switch_algorithm(&mut self, algorithm: Algorithm) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/blob_store/compressed.rs:388:5
    |
388 |     Zstd { level: i32 },
    |     ^^^^
    |
note: the lint level is defined here
   --> src/lib.rs:64:9
    |
64  | #![warn(missing_docs)]
    |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/blob_store/compressed.rs:388:12
    |
388 |     Zstd { level: i32 },
    |            ^^^^^^^^^^

warning: missing documentation for a variant
   --> src/blob_store/compressed.rs:391:5
    |
391 |     None,
    |     ^^^^

warning: missing documentation for an associated function
  --> src/concurrency/mod.rs:34:5
   |
34 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> src/concurrency/fiber_pool.rs:68:5
   |
68 |     pub fn new(handle: JoinHandle<Result<T>>, id: u64) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/concurrency/fiber_pool.rs:353:5
    |
353 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/fiber_pool.rs:359:5
    |
359 |     pub fn max_fibers(mut self, max_fibers: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/fiber_pool.rs:364:5
    |
364 |     pub fn initial_workers(mut self, initial_workers: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/fiber_pool.rs:369:5
    |
369 |     pub fn max_workers(mut self, max_workers: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/fiber_pool.rs:374:5
    |
374 |     pub fn queue_capacity(mut self, queue_capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/fiber_pool.rs:379:5
    |
379 |     pub fn idle_timeout(mut self, idle_timeout: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/fiber_pool.rs:384:5
    |
384 |     pub fn build(self) -> Result<FiberPool> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/concurrency/pipeline.rs:540:5
    |
540 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/pipeline.rs:546:5
    |
546 |     pub fn buffer_size(mut self, buffer_size: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/pipeline.rs:551:5
    |
551 |     pub fn max_in_flight(mut self, max_in_flight: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/pipeline.rs:556:5
    |
556 |     pub fn stage_timeout(mut self, stage_timeout: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/pipeline.rs:561:5
    |
561 |     pub fn enable_batching(mut self, enable: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/pipeline.rs:566:5
    |
566 |     pub fn batch_size(mut self, batch_size: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/pipeline.rs:571:5
    |
571 |     pub fn batch_timeout(mut self, batch_timeout: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/concurrency/pipeline.rs:576:5
    |
576 |     pub fn build(self) -> Pipeline {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/concurrency/pipeline.rs:679:5
    |
679 |     pub fn new(name: String, func: F) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/concurrency/pipeline.rs:707:5
    |
707 |     pub fn new(name: String, predicate: F) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> src/concurrency/async_blob_store.rs:16:1
   |
16 | #[async_trait::async_trait]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> src/concurrency/work_stealing.rs:48:5
   |
48 |     pub fn new(closure: F) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> src/concurrency/work_stealing.rs:57:5
   |
57 |     pub fn with_priority(mut self, priority: u8) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> src/concurrency/work_stealing.rs:62:5
   |
62 |     pub fn with_stealable(mut self, stealable: bool) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> src/concurrency/work_stealing.rs:67:5
   |
67 |     pub fn with_estimated_duration(mut self, duration: Duration) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/concurrency/work_stealing.rs:107:5
    |
107 |     pub fn new(worker_id: usize, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: creating a shared reference to mutable static
   --> src/concurrency/work_stealing.rs:507:24
    |
507 |         while unsafe { GLOBAL_EXECUTOR.is_none() } {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>
    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives
    = note: `#[warn(static_mut_refs)]` on by default

warning: missing documentation for an associated function
   --> src/compression/mod.rs:265:5
    |
265 |     pub fn new(level: i32) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/compression/mod.rs:293:5
    |
293 |     pub fn new(training_data: &[u8]) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/compression/mod.rs:378:5
    |
378 |     pub fn new(training_data: &[u8]) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/compression/mod.rs:478:5
    |
478 |     pub fn new(training_data: &[u8]) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/compression/mod.rs:523:5
    |
523 |     pub fn new(training_data: &[u8]) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> src/compression/adaptive.rs:53:5
   |
53 |     pub fn new(data_type: String, algorithm: Algorithm) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/compression/realtime.rs:326:5
    |
326 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/compression/realtime.rs:332:5
    |
332 |     pub fn mode(mut self, mode: CompressionMode) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/compression/realtime.rs:337:5
    |
337 |     pub fn max_concurrent(mut self, max_concurrent: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/compression/realtime.rs:342:5
    |
342 |     pub fn enable_deadlines(mut self, enable: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/compression/realtime.rs:347:5
    |
347 |     pub fn fallback_on_timeout(mut self, fallback: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/compression/realtime.rs:352:5
    |
352 |     pub fn batch_size(mut self, size: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/compression/realtime.rs:357:5
    |
357 |     pub fn build(self) -> Result<RealtimeCompressor> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: `infini-zip` (lib) generated 58 warnings
   Compiling infini-zip v0.1.0 (/usr/local/google/home/binwu/go/src/infini.sh/infini-zip)
    Finished `bench` profile [optimized + debuginfo] target(s) in 33.27s
     Running benches/benchmark.rs (target/release/deps/benchmark-67c86b1edf50f8b1)
Benchmarking FastVec push 100k elements
Benchmarking FastVec push 100k elements: Warming up for 3.0000 s
Benchmarking FastVec push 100k elements: Collecting 100 samples in estimated 5.2234 s (81k iterations)
Benchmarking FastVec push 100k elements: Analyzing
FastVec push 100k elements
                        time:   [64.529 µs 64.621 µs 64.720 µs]
Found 5 outliers among 100 measurements (5.00%)
  3 (3.00%) high mild
  2 (2.00%) high severe

Benchmarking Vector Comparison/FastVec
Benchmarking Vector Comparison/FastVec: Warming up for 3.0000 s
Benchmarking Vector Comparison/FastVec: Collecting 100 samples in estimated 5.0326 s (742k iterations)
Benchmarking Vector Comparison/FastVec: Analyzing
Vector Comparison/FastVec
                        time:   [6.7541 µs 6.7616 µs 6.7700 µs]
Found 7 outliers among 100 measurements (7.00%)
  5 (5.00%) high mild
  2 (2.00%) high severe
Benchmarking Vector Comparison/std::Vec
Benchmarking Vector Comparison/std::Vec: Warming up for 3.0000 s
Benchmarking Vector Comparison/std::Vec: Collecting 100 samples in estimated 5.0011 s (490k iterations)
Benchmarking Vector Comparison/std::Vec: Analyzing
Vector Comparison/std::Vec
                        time:   [10.130 µs 10.141 µs 10.157 µs]
Found 6 outliers among 100 measurements (6.00%)
  2 (2.00%) high mild
  4 (4.00%) high severe

Benchmarking FastStr hash
Benchmarking FastStr hash: Warming up for 3.0000 s
Benchmarking FastStr hash: Collecting 100 samples in estimated 5.0109 s (1.9M iterations)
Benchmarking FastStr hash: Analyzing
FastStr hash            time:   [2.6668 µs 2.6699 µs 2.6733 µs]
                        change: [-0.0887% +0.0308% +0.1476%] (p = 0.61 > 0.05)
                        No change in performance detected.
Found 8 outliers among 100 measurements (8.00%)
  1 (1.00%) low mild
  5 (5.00%) high mild
  2 (2.00%) high severe

Benchmarking FastStr Operations/find
Benchmarking FastStr Operations/find: Warming up for 3.0000 s
Benchmarking FastStr Operations/find: Collecting 100 samples in estimated 5.0000 s (92M iterations)
Benchmarking FastStr Operations/find: Analyzing
FastStr Operations/find time:   [53.715 ns 53.779 ns 53.848 ns]
Found 4 outliers among 100 measurements (4.00%)
  3 (3.00%) high mild
  1 (1.00%) high severe
Benchmarking FastStr Operations/starts_with
Benchmarking FastStr Operations/starts_with: Warming up for 3.0000 s
Benchmarking FastStr Operations/starts_with: Collecting 100 samples in estimated 5.0000 s (8.0B iterations)
Benchmarking FastStr Operations/starts_with: Analyzing
FastStr Operations/starts_with
                        time:   [623.83 ps 624.99 ps 626.43 ps]
Found 8 outliers among 100 measurements (8.00%)
  6 (6.00%) high mild
  2 (2.00%) high severe
Benchmarking FastStr Operations/substring
Benchmarking FastStr Operations/substring: Warming up for 3.0000 s
Benchmarking FastStr Operations/substring: Collecting 100 samples in estimated 5.0000 s (4.0B iterations)
Benchmarking FastStr Operations/substring: Analyzing
FastStr Operations/substring
                        time:   [1.2436 ns 1.2450 ns 1.2467 ns]
Found 15 outliers among 100 measurements (15.00%)
  1 (1.00%) low mild
  8 (8.00%) high mild
  6 (6.00%) high severe

Benchmarking Succinct Data Structures/BitVector creation
Benchmarking Succinct Data Structures/BitVector creation: Warming up for 3.0000 s
Benchmarking Succinct Data Structures/BitVector creation: Collecting 100 samples in estimated 5.1450 s (121k iterations)
Benchmarking Succinct Data Structures/BitVector creation: Analyzing
Succinct Data Structures/BitVector creation
                        time:   [42.290 µs 42.355 µs 42.434 µs]
Found 7 outliers among 100 measurements (7.00%)
  3 (3.00%) high mild
  4 (4.00%) high severe
Benchmarking Succinct Data Structures/RankSelect256 construction
Benchmarking Succinct Data Structures/RankSelect256 construction: Warming up for 3.0000 s
Benchmarking Succinct Data Structures/RankSelect256 construction: Collecting 100 samples in estimated 7.7359 s (10k iterations)
Benchmarking Succinct Data Structures/RankSelect256 construction: Analyzing
Succinct Data Structures/RankSelect256 construction
                        time:   [764.07 µs 764.41 µs 764.75 µs]
Found 6 outliers among 100 measurements (6.00%)
  6 (6.00%) high mild
Benchmarking Succinct Data Structures/rank1 operation
Benchmarking Succinct Data Structures/rank1 operation: Warming up for 3.0000 s
Benchmarking Succinct Data Structures/rank1 operation: Collecting 100 samples in estimated 5.0004 s (8.6M iterations)
Benchmarking Succinct Data Structures/rank1 operation: Analyzing
Succinct Data Structures/rank1 operation
                        time:   [581.20 ns 581.91 ns 582.72 ns]
Found 6 outliers among 100 measurements (6.00%)
  1 (1.00%) low mild
  3 (3.00%) high mild
  2 (2.00%) high severe
Benchmarking Succinct Data Structures/select1 operation
Benchmarking Succinct Data Structures/select1 operation: Warming up for 3.0000 s
Benchmarking Succinct Data Structures/select1 operation: Collecting 100 samples in estimated 5.0452 s (212k iterations)
Benchmarking Succinct Data Structures/select1 operation: Analyzing
Succinct Data Structures/select1 operation
                        time:   [23.805 µs 23.902 µs 24.028 µs]
Found 11 outliers among 100 measurements (11.00%)
  4 (4.00%) high mild
  7 (7.00%) high severe

Benchmarking HashMap Comparison/GoldHashMap insert 10k
Benchmarking HashMap Comparison/GoldHashMap insert 10k: Warming up for 3.0000 s
Benchmarking HashMap Comparison/GoldHashMap insert 10k: Collecting 100 samples in estimated 9.9580 s (10k iterations)
Benchmarking HashMap Comparison/GoldHashMap insert 10k: Analyzing
HashMap Comparison/GoldHashMap insert 10k
                        time:   [986.73 µs 988.25 µs 990.01 µs]
Found 3 outliers among 100 measurements (3.00%)
  1 (1.00%) high mild
  2 (2.00%) high severe
Benchmarking HashMap Comparison/std::HashMap insert 10k
Benchmarking HashMap Comparison/std::HashMap insert 10k: Warming up for 3.0000 s

Warning: Unable to complete 100 samples in 5.0s. You may wish to increase target time to 6.6s, enable flat sampling, or reduce sample count to 60.
Benchmarking HashMap Comparison/std::HashMap insert 10k: Collecting 100 samples in estimated 6.5585 s (5050 iterations)
Benchmarking HashMap Comparison/std::HashMap insert 10k: Analyzing
HashMap Comparison/std::HashMap insert 10k
                        time:   [1.2946 ms 1.2993 ms 1.3046 ms]
Found 6 outliers among 100 measurements (6.00%)
  4 (4.00%) high mild
  2 (2.00%) high severe
Benchmarking HashMap Comparison/GoldHashMap lookup
Benchmarking HashMap Comparison/GoldHashMap lookup: Warming up for 3.0000 s
Benchmarking HashMap Comparison/GoldHashMap lookup: Collecting 100 samples in estimated 5.1416 s (101k iterations)
Benchmarking HashMap Comparison/GoldHashMap lookup: Analyzing
HashMap Comparison/GoldHashMap lookup
                        time:   [50.951 µs 51.062 µs 51.197 µs]
Found 7 outliers among 100 measurements (7.00%)
  5 (5.00%) high mild
  2 (2.00%) high severe
Benchmarking HashMap Comparison/std::HashMap lookup
Benchmarking HashMap Comparison/std::HashMap lookup: Warming up for 3.0000 s
Benchmarking HashMap Comparison/std::HashMap lookup: Collecting 100 samples in estimated 5.1775 s (86k iterations)
Benchmarking HashMap Comparison/std::HashMap lookup: Analyzing
HashMap Comparison/std::HashMap lookup
                        time:   [59.991 µs 60.151 µs 60.344 µs]
Found 4 outliers among 100 measurements (4.00%)
  1 (1.00%) high mild
  3 (3.00%) high severe

Benchmarking Memory Mapping Performance/MemoryMappedInput read 1KB
Benchmarking Memory Mapping Performance/MemoryMappedInput read 1KB: Warming up for 3.0000 s
Benchmarking Memory Mapping Performance/MemoryMappedInput read 1KB: Collecting 100 samples in estimated 5.2358 s (111k iterations)
Benchmarking Memory Mapping Performance/MemoryMappedInput read 1KB: Analyzing
Memory Mapping Performance/MemoryMappedInput read 1KB
                        time:   [47.346 µs 47.452 µs 47.566 µs]
Found 6 outliers among 100 measurements (6.00%)
  5 (5.00%) high mild
  1 (1.00%) high severe
Benchmarking Memory Mapping Performance/Regular File read 1KB
Benchmarking Memory Mapping Performance/Regular File read 1KB: Warming up for 3.0000 s
Benchmarking Memory Mapping Performance/Regular File read 1KB: Collecting 100 samples in estimated 5.1593 s (146k iterations)
Benchmarking Memory Mapping Performance/Regular File read 1KB: Analyzing
Memory Mapping Performance/Regular File read 1KB
                        time:   [35.291 µs 35.354 µs 35.431 µs]
Found 8 outliers among 100 measurements (8.00%)
  1 (1.00%) low mild
  2 (2.00%) high mild
  5 (5.00%) high severe
Benchmarking Memory Mapping Performance/MemoryMappedInput read 1MB
Benchmarking Memory Mapping Performance/MemoryMappedInput read 1MB: Warming up for 3.0000 s
Benchmarking Memory Mapping Performance/MemoryMappedInput read 1MB: Collecting 100 samples in estimated 5.8816 s (30k iterations)
Benchmarking Memory Mapping Performance/MemoryMappedInput read 1MB: Analyzing
Memory Mapping Performance/MemoryMappedInput read 1MB
                        time:   [193.49 µs 194.83 µs 196.04 µs]
Benchmarking Memory Mapping Performance/Regular File read 1MB
Benchmarking Memory Mapping Performance/Regular File read 1MB: Warming up for 3.0000 s
Benchmarking Memory Mapping Performance/Regular File read 1MB: Collecting 100 samples in estimated 5.3040 s (40k iterations)
Benchmarking Memory Mapping Performance/Regular File read 1MB: Analyzing
Memory Mapping Performance/Regular File read 1MB
                        time:   [131.58 µs 133.16 µs 134.84 µs]
Found 10 outliers among 100 measurements (10.00%)
  8 (8.00%) low mild
  1 (1.00%) high mild
  1 (1.00%) high severe
Benchmarking Memory Mapping Performance/MemoryMappedInput read 10MB
Benchmarking Memory Mapping Performance/MemoryMappedInput read 10MB: Warming up for 3.0000 s
Benchmarking Memory Mapping Performance/MemoryMappedInput read 10MB: Collecting 100 samples in estimated 5.1748 s (2400 iterations)
Benchmarking Memory Mapping Performance/MemoryMappedInput read 10MB: Analyzing
Memory Mapping Performance/MemoryMappedInput read 10MB
                        time:   [2.0606 ms 2.0972 ms 2.1346 ms]
Found 7 outliers among 100 measurements (7.00%)
  3 (3.00%) low mild
  4 (4.00%) high mild
Benchmarking Memory Mapping Performance/Regular File read 10MB
Benchmarking Memory Mapping Performance/Regular File read 10MB: Warming up for 3.0000 s

Warning: Unable to complete 100 samples in 5.0s. You may wish to increase target time to 9.6s, enable flat sampling, or reduce sample count to 50.
Benchmarking Memory Mapping Performance/Regular File read 10MB: Collecting 100 samples in estimated 9.5791 s (5050 iterations)
Benchmarking Memory Mapping Performance/Regular File read 10MB: Analyzing
Memory Mapping Performance/Regular File read 10MB
                        time:   [1.9369 ms 1.9870 ms 2.0348 ms]
Benchmarking Memory Mapping Performance/MemoryMappedOutput write 1MB
Benchmarking Memory Mapping Performance/MemoryMappedOutput write 1MB: Warming up for 3.0000 s

Warning: Unable to complete 100 samples in 5.0s. You may wish to increase target time to 6.5s, enable flat sampling, or reduce sample count to 60.
Benchmarking Memory Mapping Performance/MemoryMappedOutput write 1MB: Collecting 100 samples in estimated 6.4534 s (5050 iterations)
Benchmarking Memory Mapping Performance/MemoryMappedOutput write 1MB: Analyzing
Memory Mapping Performance/MemoryMappedOutput write 1MB
                        time:   [1.2668 ms 1.2760 ms 1.2857 ms]
Found 1 outliers among 100 measurements (1.00%)
  1 (1.00%) high severe

Benchmarking Entropy Coding Performance/Entropy calculation Random
Benchmarking Entropy Coding Performance/Entropy calculation Random: Warming up for 3.0000 s
Benchmarking Entropy Coding Performance/Entropy calculation Random: Collecting 100 samples in estimated 5.0185 s (1.1M iterations)
Benchmarking Entropy Coding Performance/Entropy calculation Random: Analyzing
Entropy Coding Performance/Entropy calculation Random
                        time:   [4.7371 µs 4.7449 µs 4.7533 µs]
Found 15 outliers among 100 measurements (15.00%)
  8 (8.00%) high mild
  7 (7.00%) high severe
Benchmarking Entropy Coding Performance/Huffman tree construction Random
Benchmarking Entropy Coding Performance/Huffman tree construction Random: Warming up for 3.0000 s
Benchmarking Entropy Coding Performance/Huffman tree construction Random: Collecting 100 samples in estimated 5.0217 s (66k iterations)
Benchmarking Entropy Coding Performance/Huffman tree construction Random: Analyzing
Entropy Coding Performance/Huffman tree construction Random
                        time:   [76.340 µs 76.529 µs 76.743 µs]
Found 15 outliers among 100 measurements (15.00%)
  12 (12.00%) high mild
  3 (3.00%) high severe
Benchmarking Entropy Coding Performance/Huffman encoding Random
Benchmarking Entropy Coding Performance/Huffman encoding Random: Warming up for 3.0000 s

Warning: Unable to complete 100 samples in 5.0s. You may wish to increase target time to 7.4s, enable flat sampling, or reduce sample count to 50.
Benchmarking Entropy Coding Performance/Huffman encoding Random: Collecting 100 samples in estimated 7.3684 s (5050 iterations)
Benchmarking Entropy Coding Performance/Huffman encoding Random: Analyzing
Entropy Coding Performance/Huffman encoding Random
                        time:   [1.4612 ms 1.4656 ms 1.4706 ms]
Found 7 outliers among 100 measurements (7.00%)
  4 (4.00%) high mild
  3 (3.00%) high severe
Benchmarking Entropy Coding Performance/rANS encoder creation Random
Benchmarking Entropy Coding Performance/rANS encoder creation Random: Warming up for 3.0000 s
Benchmarking Entropy Coding Performance/rANS encoder creation Random: Collecting 100 samples in estimated 5.0009 s (1.2M iterations)
Benchmarking Entropy Coding Performance/rANS encoder creation Random: Analyzing
Entropy Coding Performance/rANS encoder creation Random
                        time:   [4.1331 µs 4.1420 µs 4.1517 µs]
Found 15 outliers among 100 measurements (15.00%)
  7 (7.00%) high mild
  8 (8.00%) high severe
Benchmarking Entropy Coding Performance/Dictionary construction Random
Benchmarking Entropy Coding Performance/Dictionary construction Random: Warming up for 3.0000 s
Benchmarking Entropy Coding Performance/Dictionary construction Random: Collecting 100 samples in estimated 5.0647 s (121k iterations)
Benchmarking Entropy Coding Performance/Dictionary construction Random: Analyzing
Entropy Coding Performance/Dictionary construction Random
                        time:   [41.510 µs 41.637 µs 41.776 µs]
Found 7 outliers among 100 measurements (7.00%)
  7 (7.00%) high mild
Benchmarking Entropy Coding Performance/Dictionary compression Random
Benchmarking Entropy Coding Performance/Dictionary compression Random: Warming up for 3.0000 s
Benchmarking Entropy Coding Performance/Dictionary compression Random: Collecting 100 samples in estimated 5.1457 s (10k iterations)
Benchmarking Entropy Coding Performance/Dictionary compression Random: Analyzing
Entropy Coding Performance/Dictionary compression Random
                        time:   [479.68 µs 480.43 µs 481.32 µs]
Found 2 outliers among 100 measurements (2.00%)
  1 (1.00%) high mild
  1 (1.00%) high severe
Benchmarking Entropy Coding Performance/Entropy calculation Biased
Benchmarking Entropy Coding Performance/Entropy calculation Biased: Warming up for 3.0000 s
Benchmarking Entropy Coding Performance/Entropy calculation Biased: Collecting 100 samples in estimated 5.0033 s (768k iterations)
Benchmarking Entropy Coding Performance/Entropy calculation Biased: Analyzing
Entropy Coding Performance/Entropy calculation Biased
                        time:   [6.4931 µs 6.4973 µs 6.5022 µs]
Found 9 outliers among 100 measurements (9.00%)
  6 (6.00%) high mild
  3 (3.00%) high severe
Benchmarking Entropy Coding Performance/Huffman tree construction Biased
Benchmarking Entropy Coding Performance/Huffman tree construction Biased: Warming up for 3.0000 s
Benchmarking Entropy Coding Performance/Huffman tree construction Biased: Collecting 100 samples in estimated 5.0166 s (626k iterations)
Benchmarking Entropy Coding Performance/Huffman tree construction Biased: Analyzing
Entropy Coding Performance/Huffman tree construction Biased
                        time:   [8.0140 µs 8.0231 µs 8.0333 µs]
Found 11 outliers among 100 measurements (11.00%)
  8 (8.00%) high mild
  3 (3.00%) high severe
Benchmarking Entropy Coding Performance/Huffman encoding Biased
Benchmarking Entropy Coding Performance/Huffman encoding Biased: Warming up for 3.0000 s
Benchmarking Entropy Coding Performance/Huffman encoding Biased: Collecting 100 samples in estimated 5.5249 s (20k iterations)
Benchmarking Entropy Coding Performance/Huffman encoding Biased: Analyzing
Entropy Coding Performance/Huffman encoding Biased
                        time:   [273.22 µs 273.57 µs 274.01 µs]
Found 13 outliers among 100 measurements (13.00%)
  6 (6.00%) high mild
  7 (7.00%) high severe
Benchmarking Entropy Coding Performance/rANS encoder creation Biased
Benchmarking Entropy Coding Performance/rANS encoder creation Biased: Warming up for 3.0000 s
Benchmarking Entropy Coding Performance/rANS encoder creation Biased: Collecting 100 samples in estimated 5.0051 s (687k iterations)
Benchmarking Entropy Coding Performance/rANS encoder creation Biased: Analyzing
Entropy Coding Performance/rANS encoder creation Biased
                        time:   [7.2838 µs 7.2922 µs 7.3029 µs]
Found 3 outliers among 100 measurements (3.00%)
  2 (2.00%) high mild
  1 (1.00%) high severe
Benchmarking Entropy Coding Performance/Dictionary construction Biased
Benchmarking Entropy Coding Performance/Dictionary construction Biased: Warming up for 3.0000 s

Warning: Unable to complete 100 samples in 5.0s. You may wish to increase target time to 31.6s, or reduce sample count to 10.
Benchmarking Entropy Coding Performance/Dictionary construction Biased: Collecting 100 samples in estimated 31.590 s (100 iterations)
Benchmarking Entropy Coding Performance/Dictionary construction Biased: Analyzing
Entropy Coding Performance/Dictionary construction Biased
                        time:   [317.61 ms 319.77 ms 322.21 ms]
Found 8 outliers among 100 measurements (8.00%)
  5 (5.00%) high mild
  3 (3.00%) high severe
Benchmarking Entropy Coding Performance/Dictionary compression Biased
Benchmarking Entropy Coding Performance/Dictionary compression Biased: Warming up for 3.0000 s
Benchmarking Entropy Coding Performance/Dictionary compression Biased: Collecting 100 samples in estimated 5.1056 s (1100 iterations)
Benchmarking Entropy Coding Performance/Dictionary compression Biased: Analyzing
Entropy Coding Performance/Dictionary compression Biased
                        time:   [4.6476 ms 4.6913 ms 4.7686 ms]
Found 7 outliers among 100 measurements (7.00%)
  2 (2.00%) high mild
  5 (5.00%) high severe
Benchmarking Entropy Coding Performance/Entropy calculation Repeated
Benchmarking Entropy Coding Performance/Entropy calculation Repeated: Warming up for 3.0000 s
